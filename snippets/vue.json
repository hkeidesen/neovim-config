{
  "Print to console": {
    "prefix": "clg",
    "body": ["console.log('$1');", "$0"],
    "description": "Log output to console"
  },
  "Print to console, with context": {
    "prefix": "clo",
    "body": ["console.log('$1', $1);", "$0"],
    "description": "Log output to console, with context"
  },
  "Vue 3 Component with Options API": {
    "prefix": "vue-o",
    "body": [
      "<template>",
      "  <div>",
      "  </div>",
      "</template>",
      "",
      "<script lang='ts'>",
      "import { defineComponent } from 'vue';",
      "",
      "export default defineComponent({",
      "  name: 'YourComponentName',",
      "  props: {},",
      "  data() {",
      "    return {};",
      "  },",
      "  methods: {},",
      "  computed: {},",
      "  mounted() {}",
      "});",
      "</script>",
      "",
      "<style lang='scss' scoped>",
      "</style>"
    ],
    "description": "Vue 3 Component with Options API Template"
  },
  "Vue 3 Component with Composition API": {
    "prefix": "vue-c",
    "body": [
      "<template>",
      "  <div>",
      "    <!--HTML code here -->",
      "  </div>",
      "</template>",
      "",
      "<script setup lang='ts'>",
      "// Code here",
      "interface PropsInterface {",
      "  prop1: number, // change to appropriate type",
      "  prop2: boolean // change to appropriate type",
      "}",
      "const props = withDefaults(defineProps<PropsInterface>(), {",
      "  prop1: 0,",
      "  prop2: true",
      "});",
      "const emits = defineEmits(['emitA']);",
      "</script>",
      "",
      "<style lang='scss'>",
      "/* CSS styles here */",
      "</style>"
    ],
    "description": "Vue 3 Component with Composition API"
  },
  "Add reactive props": {
    "prefix": "vue-props",
    "body": [
      "const props = withDefaults(defineProps<PropsInterface>(), {",
      "  prop1: 0,",
      "  prop2: true",
      "})"
    ],
    "description": "Template to add reactive properties to a Vue 3 component using Composition API"
  }
}
